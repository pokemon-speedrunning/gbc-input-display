use crate::application::*;
use crate::winapi::*;
use std::io::*;

macro_rules! qt_translate {
    ($x:expr) => {
        match $x {
            0x01020001 => 0x03,
            0x01000003 => 0x08,
            0x01000001 => 0x09,
            0x0100000b => 0x0C,
            0x01000004 => 0x0D,
            0x01000020 => 0x10,
            0x01000021 => 0x11,
            0x01000023 => 0x12,
            0x01000008 => 0x13,
            0x01000024 => 0x14,
            0x01000000 => 0x1B,
            0x0100117e => 0x1F,
            0x20 => 0x20,
            0x01000016 => 0x21,
            0x01000017 => 0x22,
            0x01000011 => 0x23,
            0x01000010 => 0x24,
            0x01000012 => 0x25,
            0x01000013 => 0x26,
            0x01000014 => 0x27,
            0x01000015 => 0x28,
            0x01010000 => 0x29,
            0x01020002 => 0x2A,
            0x01020003 => 0x2B,
            0x01000009 => 0x2C,
            0x01000006 => 0x2D,
            0x01000007 => 0x2E,
            0x01000058 => 0x2F,
            0x30 => 0x30,
            0x31 => 0x31,
            0x32 => 0x32,
            0x33 => 0x33,
            0x34 => 0x34,
            0x35 => 0x35,
            0x36 => 0x36,
            0x37 => 0x37,
            0x38 => 0x38,
            0x39 => 0x39,
            0x41 => 0x41,
            0x42 => 0x42,
            0x43 => 0x43,
            0x44 => 0x44,
            0x45 => 0x45,
            0x46 => 0x46,
            0x47 => 0x47,
            0x48 => 0x48,
            0x49 => 0x49,
            0x4A => 0x4A,
            0x4B => 0x4B,
            0x4C => 0x4C,
            0x4D => 0x4D,
            0x4E => 0x4E,
            0x4F => 0x4F,
            0x50 => 0x50,
            0x51 => 0x51,
            0x52 => 0x52,
            0x53 => 0x53,
            0x54 => 0x54,
            0x55 => 0x55,
            0x56 => 0x56,
            0x57 => 0x57,
            0x58 => 0x58,
            0x59 => 0x59,
            0x5A => 0x5A,
            0x01000022 => 0x5B,
            0x01000055 => 0x5D,
            0x01020004 => 0x5F,
            0x2a => 0x6A,
            0x2b => 0x6B,
            0x2c => 0x6C,
            0x2d => 0x6D,
            0x2e => 0x6E,
            0x2f => 0x6F,
            0x01000030 => 0x70,
            0x01000031 => 0x71,
            0x01000032 => 0x72,
            0x01000033 => 0x73,
            0x01000034 => 0x74,
            0x01000035 => 0x75,
            0x01000036 => 0x76,
            0x01000037 => 0x77,
            0x01000038 => 0x78,
            0x01000039 => 0x79,
            0x0100003a => 0x7A,
            0x0100003b => 0x7B,
            0x0100003c => 0x7C,
            0x0100003d => 0x7D,
            0x0100003e => 0x7E,
            0x0100003f => 0x7F,
            0x01000040 => 0x80,
            0x01000041 => 0x81,
            0x01000042 => 0x82,
            0x01000043 => 0x83,
            0x01000044 => 0x84,
            0x01000045 => 0x85,
            0x01000046 => 0x86,
            0x01000047 => 0x87,
            0x01000025 => 0x90,
            0x01000026 => 0x91,
            0x92 => 0x92,
            0x0100112c => 0x93,
            0x0100112b => 0x94,
            0x95 => 0x95,
            0x96 => 0x96,
            0x01000061 => 0xA6,
            0x01000062 => 0xA7,
            0x01000064 => 0xA8,
            0x01000063 => 0xA9,
            0x01000092 => 0xAA,
            0x01000091 => 0xAB,
            0x01000090 => 0xAC,
            0x01000071 => 0xAD,
            0x01000070 => 0xAE,
            0x01000072 => 0xAF,
            0x01000083 => 0xB0,
            0x01000082 => 0xB1,
            0x01000081 => 0xB2,
            0x01000080 => 0xB3,
            0x010000a0 => 0xB4,
            0x010000a1 => 0xB5,
            0x010000a2 => 0xB6,
            0x010000a3 => 0xB7,
            0xBA => 0xBA,
            0xBB => 0xBB,
            0xBC => 0xBC,
            0xBD => 0xBD,
            0xBE => 0xBE,
            0xBF => 0xBF,
            0xC0 => 0xC0,
            0xDB => 0xDB,
            0xDC => 0xDC,
            0xDD => 0xDD,
            0xDE => 0xDE,
            0xDF => 0xDF,
            0x01020005 => 0xFA,
            0x01020006 => 0xFB,
            0x3b => 186,
            0x3a => 186,
            0x3d => 187,
            0x3c => 188,
            0x5f => 189,
            0x3e => 190,
            0x22 => 222,
            _ => 0x00,
        };
    };
}

pub fn sync_gambatte_keybindings() -> Result<()> {
    let app = unsafe { &mut *APP_POINTER };

    let subkey = app.platform.reg_open_subkey(HKEY_CURRENT_USER, "SOFTWARE\\gambatte\\gambatte_qt\\input", KEY_QUERY_VALUE)?;
    for key in app.keys.iter_mut() {
        key.ipt = qt_translate!(app.platform.reg_read_u32(subkey, &key.reg_entry)?);
    }
    app.platform.reg_close_subkey(subkey)?;

    app.gambatte_sync = true;
    return Ok(());
}
